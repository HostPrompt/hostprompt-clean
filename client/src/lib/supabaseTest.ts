import { supabase } from './supabaseClient';

/**
 * Test function to insert data into Supabase saved_content table
 * This is for testing the Supabase connection only
 */
export const testSupabaseInsert = async () => {
  try {
    console.log('Testing Supabase insert operation...');
    
    // First, manually insert a test property as requested
    console.log('Inserting test property to Supabase...');
    
    const features = ["Modern Kitchen", "Sunlit Balcony"];
    const createdAt = new Date().toISOString();
    
    const { data: newProperty, error: propertyError } = await supabase
      .from('properties')
      .insert({
        user_id: 'test-user-123',
        name: 'The Surry Hills House',
        location: 'Surry Hills, NSW, Australia',
        features: features,
        created_at: createdAt
      })
      .select();
    
    if (propertyError) {
      console.error('Error inserting test property:', propertyError.message);
      return { success: false, error: propertyError.message };
    }
    
    console.log('Successfully inserted test property:', newProperty);
    
    // Get the property ID from the inserted property
    if (!newProperty || newProperty.length === 0) {
      console.error('No property ID returned after insert');
      return { success: false, error: 'No property ID returned' };
    }
    
    const propertyId = newProperty[0].id;
    console.log('Using property ID for content insert:', propertyId);
    
    // Now attempt to insert a test row into saved_content
    const { data: insertedData, error: insertError } = await supabase
      .from('saved_content')
      .insert({
        user_id: 'test-user-123',
        property_id: propertyId, // Using the actual inserted property ID
        type: 'Social Media Caption',
        content: 'This is a test caption generated by HostPrompt.',
        created_at: new Date().toISOString()
      })
      .select();
    
    if (insertError) {
      console.error('Error inserting test data into Supabase:', insertError.message);
      return { success: false, error: insertError.message };
    }
    
    console.log('Successfully inserted test data into Supabase:', insertedData);
    
    // Try to read saved_content table to verify the insert
    const { data: content, error: contentError } = await supabase
      .from('saved_content')
      .select('*')
      .eq('user_id', 'test-user-123')
      .limit(3);
    
    if (contentError) {
      console.log('Note: Could not fetch saved_content after insert:', contentError.message);
    } else {
      console.log('Successfully fetched saved_content from Supabase after insert:', content);
    }
    
    return { 
      success: true, 
      message: 'Supabase insert operation successful',
      insertedData
    };
  } catch (err) {
    console.error('Unexpected error during Supabase test:', err);
    return { success: false, error: err instanceof Error ? err.message : String(err) };
  }
};